/* eslint-disable no-console */
import util from 'util';
import * as child_process from 'child_process';

const exec = util.promisify(child_process.exec);

const publishPackages = async () => {
    const version = process.argv[2];

    if (!version || !version.match(/^\d+\.\d+\.\d+$/)) {
        console.error(
            `ðŸš¨ You must specify a semantic version as the first argument  ðŸš¨`,
        );
        process.exit(1);
    }

    console.log('\n______________________________________________________\n\n');
    console.log(`   ðŸš€ðŸš€ðŸš€ Publishing ${version}  ðŸš€ðŸš€ðŸš€`);
    console.log('\n______________________________________________________\n\n');

    console.log(' Pull the tag:');
    await exec('git pull');
    console.log('       - âœ…  Pulled!');

    console.log(' Checkout the tag:');
    await exec(`git checkout ${version}`);
    console.log('       - âœ…  Checked out!');

    console.log(' Clean:');
    console.log('       - ðŸš® Purging node_modules...');
    await exec('yarn purge');
    console.log('       - âœ…  Purged!');

    console.log(' Build:');
    console.log('       - ðŸ“¦ Install dependencies and build packages...');
    await exec('yarn install:all');
    console.log('       - âœ…  Built!');

    console.log(' Test:');
    console.log('       - ðŸ§ª Testing packages...');
    await exec('yarn test');
    console.log('       - âœ…  Success!');

    console.log(' Publish:');
    console.log('       - ðŸ“¦ Publishing packages...');
    await exec('yarn changeset publish');
    console.log('       - âœ…  Published!');

    console.log('\n______________________________________________________\n\n');
    console.log(`       - ðŸŽ‰ðŸŽ‰ðŸŽ‰ Packages published successfully ðŸŽ‰ðŸŽ‰ðŸŽ‰`);
    console.log('\n______________________________________________________\n\n');
};

publishPackages().catch((e) => {
    console.error(e);
    process.exit(1);
});
